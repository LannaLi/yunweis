<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-4.3.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
		
		<!-- Shiro Filter -->
		<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
			<property name="securityManager" ref="securityManager" />
			<property name="loginUrl" value="/login.do" />
			<property name="filters">
				<map>
					<entry key="logout" value-ref="logoutFilter" />
				</map>
			</property>
			
			<property name="filterChainDefinitions">
				<value>
				/assets/*/** 				= anon
				/signIn.do                  = anon
				/user/isHasUser.do          = anon
				/logout.do                  = logout
				/**                         = authc
				</value>
			</property>
		</bean>
   		
   		<!-- shiro安全管理器 -->
		<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
			<property name="realm" ref="shiroRealm"/>
			<property name="sessionManager" ref="sessionManager" />
        	<property name="cacheManager" ref="cacheManager" />
		</bean>
		
		<!-- 項目自定义的Realm -->
	    <bean id="shiroRealm" class="com.dfdk.yunwei.shiro.token.SampleRealm" >
	    	<property name="authorizationCacheName" value="yunwei"/>
	    	<property name="credentialsMatcher">
	    		<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
	    			<property name="hashAlgorithmName" value="MD5"/>
	    		</bean>
	    	</property>
	    </bean>
   		
   		<!-- 会话管理器 -->
   		<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
   			<!-- session的失效时长，单位毫秒 1小时: 3600000, itzixi站点设置以 6小时 为主：21600000 -->
          	<!-- 设置全局会话超时时间，默认30分钟，即如果30分钟内没有访问会话将过期 1800000 -->
         	<property name="globalSessionTimeout" value="21600000"/>
 			<!-- 删除失效的session -->
          	<property name="deleteInvalidSessions" value="true"/>
          	<!-- 所有的session一定要将id设置到Cookie之中，需要提供有Cookie的操作模版 -->
          	<property name="sessionIdCookie" ref="sessionIdCookie"/>
          	<!-- 定义sessionIdCookie模版可以进行操作的启用 -->
        	<property name="sessionIdCookieEnabled" value="true"/>
        	<!-- 定义要使用的无效的Session定时调度器 -->
        	<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
          	<!-- 是否开启会话验证器，默认是开启的 -->
          	<property name="sessionValidationSchedulerEnabled" value="true"/>
          	<!-- 定义Session可以进行序列化的工具类 -->
        	<property name="sessionDAO" ref="sessionDAO"/>
   		</bean>
   		
   		<!-- SESSION ID生成管理器 -->
   		<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />
   		<!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID,
		当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
		<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		    <constructor-arg name="name" value="dfdk.session.id"/>
		    <!-- 保证该系统不会受到跨域的脚本操作供给 --> 
		    <property name="httpOnly" value="true"/> 
		    <!-- 定义Cookie的过期时间，单位为秒，如果设置为-1表示浏览器关闭，则Cookie消失 --> 
		    <property name="maxAge" value="-1"/> 
		</bean>
   		
   		<!-- 配置session的定时验证检测程序类，以让无效的session释放 -->
	    <bean id="sessionValidationScheduler"
	        class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
	        <!-- 设置session的失效扫描间隔，单位为毫秒 -->
	        <property name="sessionValidationInterval" value="100000"/>
	        <!-- 随后还需要定义有一个会话管理器的程序类的引用 -->
	        <property name="sessionManager" ref="sessionManager"/>
	    </bean> 
   		
   		<!-- 配置Session DAO的操作处理 --> 
		<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO"> 
		    <!-- 设置session缓存的名字，这个名字可以任意 --> 
		    <property name="activeSessionsCacheName" value="shiro-activeSessionCache:"/> 
		    <!-- 定义该Session DAO操作中所使用的ID生成器 --> 
		    <property name="sessionIdGenerator" ref="sessionIdGenerator"/> 
		</bean>
   		
   		<bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        	<property name="redirectUrl" value="/login.do" />
    	</bean>
    	
    	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    	
</beans>
